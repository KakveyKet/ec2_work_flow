name: React.js CI/CD

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout repository
      - name: Checkout repository
        uses: actions/checkout@v3

      # Step 2: Set up Node.js
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "18" # Specify Node.js version

      # Step 3: Install dependencies
      - name: Install dependencies
        run: |
          rm -rf node_modules package-lock.json # Clean previous installs
          npm install                           # Install fresh dependencies

      # Step 4: Build React app
      - name: Build React app
        run: npm run build

      # Step 5: Install FTP client (if needed)
      - name: Install FTP client
        run: sudo apt-get install -y lftp

      # Step 6: Deploy build to FTP server (if needed)
      - name: Deploy build to FTP server
        run: |
          lftp -u username,password ftp://139.59.101.247 <<EOF
          mirror -R build /path/to/remote/directory
          bye
          EOF

      # Step 7: Deploy to AWS EC2
      - name: Deploy to AWS EC2
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          EC2_PRIVATE_KEY: ${{ secrets.EC2_PRIVATE_KEY }}
        run: |
          # Define variables
          EC2_USER=ubuntu                # Change to 'ec2-user' if using Amazon Linux
          EC2_HOST=139.59.101.247       # Your EC2 public IP
          APP_DIR=/var/www/react-app    # Your app directory on the EC2 instance

          # Decode and save the private key
          echo "$EC2_PRIVATE_KEY" | base64 --decode > /tmp/my_key.pem
          chmod 400 /tmp/my_key.pem

          # Copy build files to EC2
          scp -i /tmp/my_key.pem -r build/* $EC2_USER@$EC2_HOST:$APP_DIR

          # SSH into EC2 to restart the server
          ssh -i /tmp/my_key.pem $EC2_USER@$EC2_HOST << 'EOF'
          sudo systemctl restart nginx
          EOF
